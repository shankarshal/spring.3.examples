<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<mvc:annotation-driven/>
	<context:component-scan base-package="com.darekzon.spring.exhandler.web" />
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!--  
		Setting up aspects configuration, there is another option to configure aspects by annotations but 
		then you can have troubles with other annotated classes (like @Autowired, @Controller...)
	-->
       <aop:aspectj-autoproxy />
       <aop:config>
       		<aop:aspect id="exceptionHandler" ref="exceptionHandler">
       			<!-- find all methods that returns ModelAndView objects -->
	            <aop:pointcut expression="execution(org.springframework.web.servlet.ModelAndView+ *(..))" id="returningMav" />
	            <!-- and execute them inside exceptionHandler -->
	            <aop:around method="exceptionHandler" pointcut-ref="returningMav" />
            </aop:aspect>
       </aop:config>
       <bean id="exceptionHandler" class="com.darekzon.spring.exhandler.aop.ExceptionHandler" />
</beans>