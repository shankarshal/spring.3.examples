<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<mvc:annotation-driven/>
	<context:component-scan base-package="com.darekzon.spring.aopmessages.web" />
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!--  
		Setting up aspects configuration, there is another option to configure aspects by annotations but 
		then you can have troubles with other annotated classes (like @Autowired, @Controller...)
	-->
       <aop:aspectj-autoproxy />
       <aop:config>
       		<aop:aspect id="sysMessages" ref="systemMessages">
                     <!-- This tells AspectsJ that they should run method messageHandler from class MessageHandler, 
                     	everytime when Spring runs method returning ModelAndView. System should catch return value and pass it to messageHandler method
                     	as a parameter 'mav' -->
                     <aop:pointcut expression="execution(org.springframework.web.servlet.ModelAndView+ *(..))" id="returningMav" />
                     <aop:after-returning method="messageHandler" returning="mav" pointcut-ref="returningMav" />
              </aop:aspect>

       </aop:config>
       <bean id="systemMessages" class="com.darekzon.spring.aopmessages.aop.MessagesHandler" />

</beans>